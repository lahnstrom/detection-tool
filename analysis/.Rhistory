ggplot(proportions, aes(x = reorder(label, decile), y = proportion)) +
geom_bar(stat = "identity", fill="steelblue") +
ylim(c(0,1)) +
labs(
x = "Decile",
y = "Proportion with\nresult publications"
) +
my_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(proportions, aes(x = reorder(label, decile), y = proportion)) +
geom_bar(stat = "identity", fill="steelblue") +
ylim(c(0,1)) +
labs(
x = "Enrolment",
y = "Proportion with\nresult publications"
) +
my_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot
plot_enrolment <- ggplot(data = merged_trials_enrolment_non_na, aes(x = Enrollment, y = tool_results)) +
geom_point(alpha = 0.5) +
geom_line(data = Predicted_data_enrolment, aes(x = Enrollment, y = tool_results), color = "steelblue", size = 1) +
scale_x_log10() +
labs(x = "Enrolment (Log Scale)",
y = "Predicted Probability of Results Detection") +
my_theme
ggsave("./out/figures/logistic_regression_enrolment.pdf", plot = plot_enrolment, device = "pdf")
plot_enrolment_deciles <- ggplot(proportions, aes(x = reorder(label, decile), y = proportion)) +
geom_bar(stat = "identity", fill="steelblue") +
ylim(c(0,1)) +
labs(
x = "Enrolment",
y = "Proportion with\nresult publications"
) +
my_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot
plot_enrolment <- ggplot(data = merged_trials_enrolment_non_na, aes(x = Enrollment, y = tool_results)) +
geom_point(alpha = 0.5) +
geom_line(data = Predicted_data_enrolment, aes(x = Enrollment, y = tool_results), color = "steelblue", size = 1) +
scale_x_log10() +
labs(x = "Enrolment (Log Scale)",
y = "Predicted Probability of Results Detection") +
my_theme
library(patchwork)
combined_enrolment_plots <- plot_enrolment + plot_enrolment_deciles + plot_layout(ncol = 2)
print(combined_enrolment_plots)
plot_enrolment <- ggplot(data = merged_trials_enrolment_non_na, aes(x = Enrollment, y = tool_results)) +
geom_point(alpha = 0.5) +
geom_line(data = Predicted_data_enrolment, aes(x = Enrollment, y = tool_results), color = "steelblue", size = 1) +
scale_x_log10() +
labs(x = "Enrolment (Log Scale)",
y = "Predicted Probability\nResults Detection") +
my_theme
ggsave("./out/figures/logistic_regression_enrolment.pdf", plot = plot_enrolment, device = "pdf")
combined_enrolment_plots <- plot_enrolment + plot_enrolment_deciles + plot_layout(ncol = 2)
print(combined_enrolment_plots)
plot_enrolment <- ggplot(data = merged_trials_enrolment_non_na, aes(x = Enrollment, y = tool_results)) +
geom_point(alpha = 0.5) +
geom_line(data = Predicted_data_enrolment, aes(x = Enrollment, y = tool_results), color = "steelblue", size = 1) +
scale_x_log10() +
labs(x = "Enrolment (Log Scale)",
y = "Predicted probability\n of results detection") +
my_theme
ggsave("./out/figures/logistic_regression_enrolment.pdf", plot = plot_enrolment, device = "pdf")
combined_enrolment_plots <- plot_enrolment + plot_enrolment_deciles + plot_layout(ncol = 2)
print(combined_enrolment_plots)
plot_enrolment <- ggplot(data = merged_trials_enrolment_non_na, aes(x = Enrollment, y = tool_results)) +
geom_point(alpha = 0.5) +
geom_line(data = Predicted_data_enrolment, aes(x = Enrollment, y = tool_results), color = "steelblue", size = 1) +
scale_x_log10() +
labs(x = "Enrolment (Log Scale)",
y = "Predicted probability\n of result detection") +
my_theme
ggsave("./out/figures/logistic_regression_enrolment.pdf", plot = plot_enrolment, device = "pdf")
combined_enrolment_plots <- plot_enrolment + plot_enrolment_deciles + plot_layout(ncol = 2)
print(combined_enrolment_plots)
ggsave("./out/figures/logistic_regression_enrolment_combined.pdf", plot =combined_enrolment_plots, device = "pdf")
# Logistic regression with tool_results as dependent, Enrolment as explanatory
logistic_model_enrolment <- merged_trials_enrolment %>%
glm(tool_results ~ Enrollment, data = ., family = binomial())
summary(logistic_model_enrolment)
lm_enrolment <- lm(proportion ~ decile, data = plot_enrolment_deciles )
lm_enrolment <- lm(proportion ~ decile, data = proportions )
summary(lm_enrolment)
proportions_100 <- merged_trials_enrolment_non_na %>%
mutate(hundreth = cut(
Enrollment,
breaks = quantile(Enrollment, probs = seq(0, 1, 0.01), na.rm = TRUE),
include.lowest = TRUE,
labels = FALSE
))
proportions_100 <- merged_trials_enrolment_non_na %>%
mutate(hundreth = cut(
Enrollment,
breaks = quantile(Enrollment, probs = seq(0, 1, 0.01), na.rm = TRUE),
include.lowest = TRUE,
labels = FALSE
)) %>%
group_by(hundreth) %>%
summarise(
proportion = mean(tool_results == 1, na.rm = TRUE),
min_enrolment = min(Enrollment, na.rm = TRUE),
max_enrolment = max(Enrollment, na.rm = TRUE)
) %>%
mutate(label = paste0("(", min_enrolment, "-", max_enrolment, ")"))
?quantile
proportions_100 <- merged_trials_enrolment_non_na %>%
mutate(hundreth = cut(
Enrollment,
breaks = quantile(Enrollment, probs = seq(0, 1, 0.05), na.rm = TRUE),
include.lowest = TRUE,
labels = FALSE
)) %>%
group_by(hundreth) %>%
summarise(
proportion = mean(tool_results == 1, na.rm = TRUE),
min_enrolment = min(Enrollment, na.rm = TRUE),
max_enrolment = max(Enrollment, na.rm = TRUE)
) %>%
mutate(label = paste0("(", min_enrolment, "-", max_enrolment, ")"))
proportions_100 <- merged_trials_enrolment_non_na %>%
mutate(hundreth = cut(
Enrollment,
breaks = quantile(Enrollment, probs = seq(0, 1, 0.02), na.rm = TRUE),
include.lowest = TRUE,
labels = FALSE
)) %>%
group_by(hundreth) %>%
summarise(
proportion = mean(tool_results == 1, na.rm = TRUE),
min_enrolment = min(Enrollment, na.rm = TRUE),
max_enrolment = max(Enrollment, na.rm = TRUE)
) %>%
mutate(label = paste0("(", min_enrolment, "-", max_enrolment, ")"))
proportions_100 <- merged_trials_enrolment_non_na %>%
mutate(hundreth = cut(
Enrollment,
breaks = quantile(Enrollment, probs = seq(0, 1, 0.03), na.rm = TRUE),
include.lowest = TRUE,
labels = FALSE
)) %>%
group_by(hundreth) %>%
summarise(
proportion = mean(tool_results == 1, na.rm = TRUE),
min_enrolment = min(Enrollment, na.rm = TRUE),
max_enrolment = max(Enrollment, na.rm = TRUE)
) %>%
mutate(label = paste0("(", min_enrolment, "-", max_enrolment, ")"))
lm_enrolment <- lm(proportions_100 ~ hundreth, data = proportions )
summary(lm_enrolment)
lm_enrolment <- lm(proportion ~ hundreth, data = proportions_100 )
summary(lm_enrolment)
plot(proportions_100)
ggplot(proportions_100, aes(x = reorder(label, hundreth), y = proportion)) +
geom_bar(stat = "identity", fill="steelblue") +
ylim(c(0,1)) +
labs(
x = "Enrolment",
y = "Proportion with\nresult publications"
) +
my_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(proportions_100, aes(x = Enrollment, y = tool_results)) +
geom_bar(stat = "identity", fill="steelblue") +
ylim(c(0,1)) +
labs(
x = "Enrolment",
y = "Proportion with\nresult publications"
) +
my_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(merged_trials_enrolment_non_na, aes(x = Enrollment, y = tool_results)) +
geom_bar(stat = "identity", fill="steelblue") +
ylim(c(0,1)) +
labs(
x = "Enrolment",
y = "Proportion with\nresult publications"
) +
my_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(merged_trials_enrolment_non_na, aes(x = Enrollment, y = tool_results))
ggplot(merged_trials_enrolment_non_na, aes(x = Enrollment, y = tool_results)) +
geom_point()
residual_deviance <- logistic_model_enrolment$deviance
residual_df <- logistic_model_enrolment$df.residual
dispersion_stat <- residual_deviance / residual_df
dispersion_stat
# Logistic regression with tool_results as dependent, Enrolment as explanatory
logistic_model_enrolment <- merged_trials_enrolment %>%
glm(tool_results ~ Enrollment, data = ., family = quasibinomial())
summary(logistic_model_enrolment)
# Logistic regression with tool_results as dependent, Enrolment as explanatory
logistic_model_enrolment <- merged_trials_enrolment %>%
glm(tool_results ~ Enrollment, data = ., family = binomial())
summary(logistic_model_enrolment)
# Logistic regression with tool_results as dependent, Enrolment as explanatory
logistic_model_enrolment <- merged_trials_enrolment %>%
glm(tool_results ~ log(Enrollment), data = ., family = binomial())
# Logistic regression with tool_results as dependent, Enrolment as explanatory
logistic_model_enrolment <- merged_trials_enrolment %>%
filter(!is.na(Enrollment)) %>%
glm(tool_results ~ log(Enrollment), data = ., family = binomial())
# Logistic regression with tool_results as dependent, Enrolment as explanatory
logistic_model_enrolment <- merged_trials_enrolment %>%
filter(!is.na(Enrollment)) %>%
glm(tool_results ~ Enrollment, data = ., family = binomial())
summary(logistic_model_enrolment)
en_log <- merged_trials_enrolment %>% filter(!is.na(Enrollment) & Enrollment != 0)
# Logistic regression with tool_results as dependent, Enrolment as explanatory
logistic_model_enrolment <- merged_trials_enrolment %>%
filter(!is.na(Enrollment) & Enrollment != 0) %>%
glm(tool_results ~ Enrollment, data = ., family = binomial())
summary(logistic_model_enrolment)
# Logistic regression with tool_results as dependent, Enrolment as explanatory
logistic_model_enrolment <- merged_trials_enrolment %>%
filter(!is.na(Enrollment) & Enrollment != 0) %>%
glm(tool_results ~ log(Enrollment), data = ., family = binomial())
summary(logistic_model_enrolment)
summary(logistic_model_enrolment)
# Logistic regression with tool_results as dependent, Enrolment as explanatory
logistic_model_enrolment <- merged_trials_enrolment %>%
filter(!is.na(Enrollment) & Enrollment != 0) %>%
glm(tool_results ~ log(Enrollment), data = ., family = binomial())
summary(logistic_model_enrolment)
merged_trials_enrolment_non_na <- merged_trials_enrolment %>%
filter(!is.na(Enrollment)) %>%
mutate(decile = cut(
Enrollment,
breaks = quantile(Enrollment, probs = seq(0, 1, 0.1), na.rm = TRUE),
include.lowest = TRUE,
labels = FALSE
))
proportions <- merged_trials_enrolment_non_na %>%
group_by(decile) %>%
summarise(
proportion = mean(tool_results == 1, na.rm = TRUE),
min_enrolment = min(Enrollment, na.rm = TRUE),
max_enrolment = max(Enrollment, na.rm = TRUE)
) %>%
mutate(label = paste0("(", min_enrolment, "-", max_enrolment, ")"))
plot_enrolment_deciles <- ggplot(proportions, aes(x = reorder(label, decile), y = proportion)) +
geom_bar(stat = "identity", fill="steelblue") +
ylim(c(0,1)) +
labs(
x = "Enrolment",
y = "Proportion with\nresult publications"
) +
my_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
proportions_100 <- merged_trials_enrolment_non_na %>%
mutate(hundreth = cut(
Enrollment,
breaks = quantile(Enrollment, probs = seq(0, 1, 0.03), na.rm = TRUE),
include.lowest = TRUE,
labels = FALSE
)) %>%
group_by(hundreth) %>%
summarise(
proportion = mean(tool_results == 1, na.rm = TRUE),
min_enrolment = min(Enrollment, na.rm = TRUE),
max_enrolment = max(Enrollment, na.rm = TRUE)
) %>%
mutate(label = paste0("(", min_enrolment, "-", max_enrolment, ")"))
ggplot(proportions_100, aes(x = reorder(label, hundreth), y = proportion)) +
geom_bar(stat = "identity", fill="steelblue") +
ylim(c(0,1)) +
labs(
x = "Enrolment",
y = "Proportion with\nresult publications"
) +
my_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Logistic regression with tool_results as dependent, Enrolment as explanatory
logistic_model_enrolment <- merged_trials_enrolment %>%
filter(!is.na(Enrollment) & Enrollment != 0) %>%
glm(tool_results ~ log(Enrollment), data = ., family = binomial())
summary(logistic_model_enrolment)
merged_trials_enrolment_non_na <- merged_trials_enrolment %>%
filter(!is.na(Enrollment)) %>%
mutate(decile = cut(
Enrollment,
breaks = quantile(Enrollment, probs = seq(0, 1, 0.1), na.rm = TRUE),
include.lowest = TRUE,
labels = FALSE
))
proportions <- merged_trials_enrolment_non_na %>%
group_by(decile) %>%
summarise(
proportion = mean(tool_results == 1, na.rm = TRUE),
min_enrolment = min(Enrollment, na.rm = TRUE),
max_enrolment = max(Enrollment, na.rm = TRUE)
) %>%
mutate(label = paste0("(", min_enrolment, "-", max_enrolment, ")"))
plot_enrolment_deciles <- ggplot(proportions, aes(x = reorder(label, decile), y = proportion)) +
geom_bar(stat = "identity", fill="steelblue") +
ylim(c(0,1)) +
labs(
x = "Enrolment",
y = "Proportion with\nresult publications"
) +
my_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
proportions_100 <- merged_trials_enrolment_non_na %>%
mutate(hundreth = cut(
Enrollment,
breaks = quantile(Enrollment, probs = seq(0, 1, 0.03), na.rm = TRUE),
include.lowest = TRUE,
labels = FALSE
)) %>%
group_by(hundreth) %>%
summarise(
proportion = mean(tool_results == 1, na.rm = TRUE),
min_enrolment = min(Enrollment, na.rm = TRUE),
max_enrolment = max(Enrollment, na.rm = TRUE)
) %>%
mutate(label = paste0("(", min_enrolment, "-", max_enrolment, ")"))
ggplot(proportions_100, aes(x = reorder(label, hundreth), y = proportion)) +
geom_bar(stat = "identity", fill="steelblue") +
ylim(c(0,1)) +
labs(
x = "Enrolment",
y = "Proportion with\nresult publications"
) +
my_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Predicted_data_enrolment <- data.frame(Enrollment=seq(min(merged_trials_enrolment$Enrollment, na.rm = T), max(merged_trials_enrolment$Enrollment, na.rm = T),length.out=500))
Predicted_data_enrolment$tool_results <- predict(logistic_model_enrolment, Predicted_data_enrolment, type="response")
plot_enrolment <- ggplot(data = merged_trials_enrolment_non_na, aes(x = Enrollment, y = tool_results)) +
geom_point(alpha = 0.5) +
geom_line(data = Predicted_data_enrolment, aes(x = Enrollment, y = tool_results), color = "steelblue", size = 1) +
scale_x_log10() +
labs(x = "Enrolment (Log Scale)",
y = "Predicted probability\n of result detection") +
my_theme
print(plot_enrolment)
print(plot_enrolment)
print(plot_enrolment)
ggsave("./out/figures/logistic_regression_enrolment.pdf", plot = plot_enrolment, device = "pdf")
combined_enrolment_plots <- plot_enrolment + plot_enrolment_deciles + plot_layout(ncol = 2)
ggsave("./out/figures/logistic_regression_enrolment_combined.pdf", plot =combined_enrolment_plots, device = "pdf")
library(data.table)
library(lubridate)
library(presize)
library(dplyr)
library(ggplot2)
library(scales)
library(patchwork)
library(data.table)
library(lubridate)
library(presize)
library(dplyr)
library(ggplot2)
library(scales)
library(patchwork)
load("./data/finalSample.rda")
tool_results <- read.csv("./data/random_sample_1.csv") %>%
select(nct_id, starts_with("tool"))
my_theme <- theme(
plot.title = element_text(size = 24),
axis.title.x = element_text(size = 24),
axis.title.y = element_text(size = 24),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "white"),     # Panel background to white
plot.background = element_rect(fill = "white"),      # Plot background to white
panel.grid.major = element_line(color = "gray90"),   # Major grid lines to light gray
panel.grid.minor = element_line(color = "gray95")    # Minor grid lines to lighter gray
)
my_theme_small <- theme(
plot.title = element_text(size = 24),
axis.title.x = element_text(size = 24),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "white"),     # Panel background to white
plot.background = element_rect(fill = "white"),      # Plot background to white
panel.grid.major = element_line(color = "gray90"),   # Major grid lines to light gray
panel.grid.minor = element_line(color = "gray95")    # Minor grid lines to lighter gray
)
n_trials <- tool_results %>% nrow()
merged_trials <- left_join(x = tool_results, y=df, by = join_by(nct_id == `NCT Number`)) %>%
mutate(tool_results = ifelse(tool_results == "true", T, ifelse(tool_results == 'false', F, NA)))
merged_trials <- merged_trials %>% mutate(tool_or_summary = tool_results | (`Study Results` == "YES"))
results_table <- merged_trials %>%
group_by(tool_results) %>%
summarise(summary = paste0(n(),"/", n_trials, " (", (n() * 100 /n_trials), "%)"))
any_results_table <- merged_trials %>%
group_by(tool_or_summary) %>%
summarise(summary = paste0(n(),"/", n_trials, " (", (n() * 100 /n_trials), "%)"))
merged_trials <- merged_trials %>%
mutate(pubmed_naive = grepl("pubmed_naive", x = tool_ident_steps),
pubmed_enhanced = grepl("pubmed_enhanced", x= tool_ident_steps),
linked_at_registration = grepl("linked_at_registration", x= tool_ident_steps),
google_scholar = grepl("google_scholar", x= tool_ident_steps),
nct_match = grepl("nct_match", x= tool_ident_steps),
)
source_summary <- merged_trials %>%
filter(tool_results == "true") %>%
group_by(tool_ident_steps) %>%
summarise(summary = paste0(n(),"/", n_trials, " (", (n() * 100 /n_trials), "%)"))
discovery_categories <- c("pubmed_naive", "pubmed_enhanced", "linked_at_registration", "google_scholar", "nct_match")
# This is a rather convoluted way to print the different categories of discovery and how many are discovered by each
my_out <- sapply(discovery_categories, function(category, index) {
loop_out <- merged_trials %>%
count(!!sym(category)) %>%
summarise(category=paste0(category, ": ", !!sym(category)), summary = paste0(n,"/", n_trials, " (", (n * 100 /n_trials), "%)"), )
print(loop_out)
})
tool_pubs <- read.csv('./data/random_sample_1_publications.csv')
tool_pubs <- tool_pubs %>%
mutate(has_results = ifelse(has_results == "true", T, F)) %>%
mutate(pubmed_naive = grepl("pubmed_naive", x = sources),
pubmed_enhanced = grepl("pubmed_enhanced", x= sources),
linked_at_registration = grepl("linked_at_registration", x= sources),
google_scholar = grepl("google_scholar", x= sources),
nct_match = grepl("nct_match", x= sources),
)
n_publications <- tool_pubs %>% nrow()
n_publications_res <- tool_pubs %>% filter(has_results) %>% nrow()
n_pubmed_naive <- tool_pubs %>% filter(pubmed_naive) %>% nrow()
n_pubmed_enhanced <- tool_pubs %>% filter(pubmed_enhanced) %>% nrow()
n_linked_at_registration <- tool_pubs %>% filter(linked_at_registration) %>% nrow()
n_google_scholar <- tool_pubs %>% filter(google_scholar) %>% nrow()
n_nct_match <- tool_pubs %>% filter(nct_match) %>% nrow()
n_pubmed_naive / n_publications
n_pubmed_enhanced / n_publications
n_linked_at_registration / n_publications
n_google_scholar / n_publications
n_nct_match / n_publications
n_pubmed_naive_res <- tool_pubs %>% filter(pubmed_naive, has_results) %>% nrow()
n_pubmed_enhanced_res <- tool_pubs %>% filter(pubmed_enhanced, has_results) %>% nrow()
n_linked_at_registration_res <- tool_pubs %>% filter(linked_at_registration, has_results) %>% nrow()
n_google_scholar_res <- tool_pubs %>% filter(google_scholar, has_results) %>% nrow()
n_nct_match_res <- tool_pubs %>% filter(nct_match, has_results) %>% nrow()
n_pubmed_naive_res / n_publications_res
n_pubmed_enhanced_res / n_publications_res
n_linked_at_registration_res/ n_publications_res
n_google_scholar_res/ n_publications_res
n_nct_match_res / n_publications_res
n_pubmed_naive_res / n_pubmed_naive
n_pubmed_enhanced_res / n_pubmed_enhanced
n_linked_at_registration_res/ n_linked_at_registration
n_google_scholar_res/ n_google_scholar
n_nct_match_res / n_nct_match
tool_pubs %>%
group_by(has_results) %>%
summarise(n=n()) %>%
mutate(prop = n / sum(n))
tool_pubs %>%
group_by(sources) %>%
summarise(n =n())
trials_with_results <- merged_trials %>% filter(tool_results) %>%
mutate(n_publications = str_count(tool_result_pmids, ",") + 1)
median(trials_with_results$n_publications)
mean(trials_with_results$n_publications)
sd(trials_with_results$n_publications)
# Convert true false to 1,0
merged_trials_enrolment <- merged_trials %>%
mutate(tool_results = ifelse(tool_results, 1, 0))
# Logistic regression with tool_results as dependent, Enrolment as explanatory
logistic_model_enrolment <- merged_trials_enrolment %>%
filter(!is.na(Enrollment) & Enrollment != 0) %>%
glm(tool_results ~ log(Enrollment), data = ., family = binomial())
summary(logistic_model_enrolment)
merged_trials_enrolment_non_na <- merged_trials_enrolment %>%
filter(!is.na(Enrollment)) %>%
mutate(decile = cut(
Enrollment,
breaks = quantile(Enrollment, probs = seq(0, 1, 0.1), na.rm = TRUE),
include.lowest = TRUE,
labels = FALSE
))
proportions <- merged_trials_enrolment_non_na %>%
group_by(decile) %>%
summarise(
proportion = mean(tool_results == 1, na.rm = TRUE),
min_enrolment = min(Enrollment, na.rm = TRUE),
max_enrolment = max(Enrollment, na.rm = TRUE)
) %>%
mutate(label = paste0("(", min_enrolment, "-", max_enrolment, ")"))
plot_enrolment_deciles <- ggplot(proportions, aes(x = reorder(label, decile), y = proportion)) +
geom_bar(stat = "identity", fill="steelblue") +
ylim(c(0,1)) +
labs(
x = "Enrolment",
y = "Proportion with\nresult publications"
) +
my_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Predicted_data_enrolment <- data.frame(Enrollment=seq(min(merged_trials_enrolment$Enrollment, na.rm = T), max(merged_trials_enrolment$Enrollment, na.rm = T),length.out=500))
Predicted_data_enrolment$tool_results <- predict(logistic_model_enrolment, Predicted_data_enrolment, type="response")
plot_enrolment <- ggplot(data = merged_trials_enrolment_non_na, aes(x = Enrollment, y = tool_results)) +
geom_point(alpha = 0.5) +
geom_line(data = Predicted_data_enrolment, aes(x = Enrollment, y = tool_results), color = "steelblue", size = 1) +
scale_x_log10() +
labs(x = "Enrolment (Log Scale)",
y = "Predicted probability\n of result detection") +
my_theme
print(plot_enrolment)
ggsave("./out/figures/logistic_regression_enrolment.pdf", plot = plot_enrolment, device = "pdf")
combined_enrolment_plots <- plot_enrolment + plot_enrolment_deciles + plot_layout(ncol = 2)
print(combined_enrolment_plots)
ggsave("./out/figures/logistic_regression_enrolment_combined.pdf", plot =combined_enrolment_plots, device = "pdf")
# Logistic regression with tool_results as dependent, completion_year as explanatory
merged_trials_year <- merged_trials %>%
mutate(tool_results = ifelse(tool_results, 1, 0)) %>%
mutate(centered_year = completion_year - mean(merged_trials$completion_year))
mean(merged_trials$completion_year)
logistic_model_year <- merged_trials_year %>%
glm(tool_results ~ centered_year, data = ., family = binomial())
summary(logistic_model_year)
